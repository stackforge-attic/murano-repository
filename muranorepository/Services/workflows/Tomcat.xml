<workflow>

	<rule match="$[?(@.networking.state.ready_for_cf)].services[?(@.type == 'tomcat' and @.keyPair)].units[?(@.state.hostname and not @.temp.KeyPairMapping)]"
		desc="This rule allows to set Key Pair for all VMs with this service">
		<update-cf-stack template="Keypair" error="exception">
			<parameter name="mappings">
				<map>
					<mapping name="instanceName"><select path="state.hostname"/></mapping>
					<mapping name="keyName"><select path="::keyPair"/></mapping>
				</map>
			</parameter>
			<success>
				<set path="temp.KeyPairMapping"><true/></set>
			</success>
			<failure>
				<report entity="unit" level="error">
					<parameter name="id"><select path="id"/></parameter>
					<parameter name="text">Unable to assign Key Pair on unit <select path="state.hostname"/> (<select path="name"/>) due to <format-error error="exception"/></parameter>
				</report>
				<stop/>
			</failure>
		</update-cf-stack>
	</rule>

	<!-- Provisioning rules -->
    <rule match="$.services[?(@.type == 'tomcat' and not @.securityTemplates)]">
        <set path="securityTemplates">
            <list>
                <text>LinuxSecurity</text>
                <text>TomcatSecurity</text>
            </list>
        </set>
    </rule>


	<rule match="$[?(@.networking.state.ready_for_cf)].services[?(@.type == 'tomcat')].units[?(@.state.hostname and not @.temp.instanceName)]"
		desc="Units of Tomcat service having hostname and image names assigned but without instances">
		<report entity="unit">
			<parameter name="id"><select path="id"/></parameter>
			<parameter name="text">
				Creating Linux instance <select path="state.hostname"/> (<select path="name"/>)
			</parameter>
		</report>
		<!-- HEAT rules definitions -->
		<!-- Rule #1 -->
		<update-cf-stack template="Linux" error="exception">
			<parameter name="mappings">
				<map>
					<mapping name="instanceName">
						<select path="state.hostname"/>
					</mapping>
					<mapping name="userData">
						<prepare-user-data template="Linux" initFile="linux_init.sh">
							<parameter name="hostname">
								<select path="state.hostname"/>
							</parameter>
							<parameter name="unit">
								<select path="id"/>
							</parameter>
							<parameter name="service">
								<select path="::id"/>
							</parameter>
						</prepare-user-data>
					</mapping>
					<mapping name="instanceType">
						<select path="::flavor" default="m1.medium"/>
					</mapping>
					<mapping name="imageName">
						<select path="::osImage.name"/>
					</mapping>
					<mapping name="availabilityZone">
						<select path="::availabilityZone" default="nova"/>
					</mapping>
				</map>
			</parameter>
			<success>
				<set path="temp.instanceName">
					<select path="name"/>
				</set>
				<report entity="unit">
					<parameter name="id">
						<select path="id"/>
					</parameter>
					<parameter name="text">
						Linux instance <select path="state.hostname"/> (<select path="name"/>) created
					</parameter>
				</report>
			</success>
		<failure>
		<report entity="unit" level="error">
			<parameter name="id">
				<select path="id"/>
			</parameter>
			<parameter name="text">
				Unable to deploy Linux instance <select path="state.hostname"/> (<select path="name"/>) due to <format-error error="exception"/>
			</parameter>
		</report>
		<stop/>
		</failure>
		</update-cf-stack>
		<!-- Rule #2 -->
		<report entity="unit">
			<parameter name="id">
				<select path="id"/>
			</parameter>
			<parameter name="text">
				Configuring security groups on <select path="state.hostname"/> (<select path="name"/>)
			</parameter>
		</report>
	</rule>
	<!-- Agent rules -->
	<rule match="$.services[?(@.type == 'tomcat')].units[?(@.temp.instanceName and not @.state.tomcatInstalled)]"
			desc="Units of Tomcat service which have got an instance deployed but have not got Tomcat service installed">
		<report entity="unit">
			<parameter name="id">
				<select path="id"/>
			</parameter>
			<parameter name="text">
				Installing Tomcat on unit <select path="state.hostname"/> (<select path="name"/>)
			</parameter>
		</report>
		<!-- Commands sequence -->
		<!-- Command #1-->
		<send-command template="DeployTomcat" error="exception">
			<parameter name="unit">
				<select path="id"/>
			</parameter>
			<parameter name="service">
				<select path="::id"/>
			</parameter>
			<success>
				<set path="state.tomcatInstalled"><true/></set>
				<report entity="unit">
					<parameter name="id">
						<select path="id"/>
					</parameter>
					<parameter name="text">
						Tomcat deployed on <select path="state.hostname"/> (<select path="name"/>)
					</parameter>
				</report>
			</success>
			<failure>
				<report entity="unit" level="error">
					<parameter name="id">
						<select path="id"/>
					</parameter>
					<parameter name="text">
						Unable to deploy Tomcat on <select path="state.hostname"/> (<select path="name"/>) due to <format-error error="exception"/>
					</parameter>
				</report>
				<stop/>
			</failure>
		</send-command>
	</rule>

    <rule match="$.services[?(@.type == 'tomcat')].units[?(@.state.tomcatInstalled and not @.state.appDeployed)]"
            desc="Units of Tomcat app services which have got Tomcat installed but not the WebApplication deployed">
		<report entity="unit">
			<parameter name="id"><select path="id"/></parameter>
			<parameter name="text">Deploying WebApp <select path="::name"/> on unit <select path="state.hostname"/> (<select path="name"/>)</parameter>
		</report>
		<send-command template="DeployTomcatApp" error="exception">
			<parameter name="unit">
				<select path="id"/>
			</parameter>
			<parameter name="service">
				<select path="::id"/>
			</parameter>
            <parameter name="mappings">
				<map>
					<mapping name="repository">
						<select path="::repository"/>
					</mapping>
				</map>
			</parameter>
			<success>
				<set path="state.appDeployed"><true/></set>
				<report entity="unit">
					<parameter name="id"><select path="id"/></parameter>
					<parameter name="text">App <select path="::name"/> has been deployed on unit <select path="state.hostname"/> (<select path="name"/>)</parameter>
				</report>
			</success>
            <failure>
                <report entity="unit" level="error">
					<parameter name="id"><select path="id"/></parameter>
					<parameter name="text">Unable to deploy WebApp on <select path="state.hostname"/> (<select path="name"/>) <format-error error="exception"/></parameter>
				</report>
                <stop/>
            </failure>
		</send-command>
	</rule>

    <rule match="$[?(@.networking.state.ready_for_cf)].services[?(@.type == 'tomcat')].units[?(@.state.hostname and not @.temp.registeredWithLB)]"
          desc="Units of Tomcat services which have a hostname assigned but are not registered with LB">
		<update-cf-stack template="LoadBalancer" result="outputs" error="exception">
			<parameter name="mappings">
				<map>
					<mapping name="instanceName"><select path="state.hostname"/></mapping>
					<mapping name="lbPort"><select path="::loadBalancerPort"/></mapping>
					<mapping name="lbName"><select path="::name"/></mapping>
				</map>
			</parameter>
			<success>
				<set path="temp.registeredWithLB"><true/></set>
				<set path="::uri">http://<select source="outputs"><parameter name="path"><select path="::name"/>-loadBalancerIp</parameter></select>:<select path="::loadBalancerPort"/></set>
			</success>
            <failure>
               <report entity="unit" level="error">
					<parameter name="id"><select path="id"/></parameter>
					<parameter name="text">Unable to create a Server Farm load balancer on unit <select path="state.hostname"/> (<select path="name"/>) due to <format-error error="exception"/></parameter>
				</report>
                <stop/>
            </failure>
		</update-cf-stack>
	</rule>

    <rule match="$[?(@.networking.state.ready_for_cf and @.networking.topology == 'routed')].services[?(@.type == 'tomcat' and @.assignFloatingIP and not @.floatingip)]"
          desc="Tomcat services which have no floating assigned yet">
        <report entity="unit">
			<parameter name="id"><select path="id"/></parameter>
			<parameter name="text">Assigning Floating IP to the to LB</parameter>
		</report>
		<update-cf-stack template="FloatingIPwithLB" result="outputs" error="exception">
			<parameter name="mappings">
				<map>
                    <mapping name="lbName"><select path="name"/></mapping>
                    <mapping name="externalNetworkId"><select path="/networking.floatingId"/></mapping>
				</map>
			</parameter>
			<success>
                <set path="floatingip"><select source="outputs"><parameter name="path"><select path="name"/>-FloatingIPaddress</parameter></select></set>
				<report entity="unit">
					<parameter name="id"><select path="id"/></parameter>
					<parameter name="text">Floating IP has been assigned to LB</parameter>
				</report>
			</success>
            <failure>
                <report entity="unit" level="error">
					<parameter name="id"><select path="id"/></parameter>
					<parameter name="text">Unable to assign floating IP to <select path="name"/> due to <format-error error="exception"/></parameter>
				</report>
            </failure>
		</update-cf-stack>
    </rule>

</workflow>
